# -*- coding: utf-8 -*-
"""linkedin_high_school_scraper

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Mn-VUwPrdxpT8lvUwBjRwRUdMPjEvvVs
"""

import csv
import os
from bs4 import BeautifulSoup

# Define the input and output file names
input_csv = 'input_linkedin_files.csv'  # Input CSV with LinkedIn profile URLs
output_csv = 'output_high_schools.csv'  # Output CSV to store LinkedIn URLs and High School names

# Function to extract high school information from HTML/text file
def extract_high_school(file_path):
    try:
        with open(file_path, 'r', encoding='utf-8') as file:
            content = file.read()

            # Check if the file is HTML by searching for common HTML tags
            if '<html>' in content or '<body>' in content:
                # Parse the content using BeautifulSoup for HTML files
                soup = BeautifulSoup(content, 'html.parser')
                # Find the "Education" section in the HTML
                education_section = soup.find('section', {'id': 'Education'})
                if education_section:
                    education_entries = education_section.find_all('li')
                    for entry in education_entries:
                        # Look for a high school name
                        school_name = entry.find('h3')
                        if school_name and 'High School' in school_name.text: # Assume that high school names should have "High School"
                            return school_name.text.strip()  # Return the high school name
                return "High School not found"  # Return if no high school is found

            else:
                # If not HTML then it should be text
                lines = content.splitlines()
                for line in lines:
                    if 'High School' in line:
                        return line.strip()  # Return the high school name
                return "High School not found"  # Return if no high school is found
    except Exception as e:
        return f"Error processing file: {e}"  # Return an error message if the file cannot be processed

# Process the input CSV and extract high school information
def process_linkedin_profiles(input_csv, output_csv):
    with open(input_csv, mode='r', encoding='utf-8') as infile, open(output_csv, mode='w', newline='', encoding='utf-8') as outfile:
        reader = csv.reader(infile)
        writer = csv.writer(outfile)
        writer.writerow(['LinkedIn URL', 'High School'])
        for row in reader:
            linkedin_url = row[0]  # Get the LinkedIn URL from the current row
            high_school = extract_high_school(linkedin_url)  # Extract the high school from linkedin_url
            writer.writerow([linkedin_url, high_school])  # Write the LinkedIn URL and high school to the output CSV

# Run the processing function
process_linkedin_profiles(input_csv, output_csv)  # Call the function to process the profiles and generate the output CSV